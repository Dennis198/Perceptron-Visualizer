{"version":3,"sources":["Perceptron/methods/help-methods/help-methods-perceptron.js","Perceptron/methods/canvas/drawmethodsperceptronfigure.js","Perceptron/methods/canvas/drawmethods2dplane.js","Perceptron/Perceptron.js","App.js","reportWebVitals.js","index.js"],"names":["adjustWeights","weights","point","error","lr","weight_1","posX","weight_2","posY","bias_weight","guess","x","y","number","label","updateWeightDisplay","context","document","getElementById","getContext","clearRect","fillStyle","font","fillText","Math","round","toFixed","COLOR_CLASS_1","resetCanvas","canvas","width","height","beginPath","fillRect","stroke","reDrawCanvas","points","imgData","getImageData","data","i","length","floor","drawPixels","reDrawPoints","strokeStyle","lineWidth","moveTo","lineTo","drawSeperationLine","p","drawMarkerRightOrWrong","color","arc","PI","fill","createPoint","classLabel","PrettoSlider","withStyles","root","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","MAX_ITERATION","Perceptron","props","intervalID","state","classMode","createInitialWeights","isLearning","lernrate","drawPerceptronFigure","this","e","isRunning","newPoints","pos","evt","rect","getBoundingClientRect","clientX","clientY","top","getMousePos","newPoint","push","drawPointOnClick","setState","allRight","counter","guess_Label","countMisclassified","setInterval","stopTraining","clearInterval","setTimeout","val","className","Button","variant","onClick","changeClass","disabled","train","trainVisual","resetWeights","clear","valueLabelDisplay","aria-label","defaultValue","min","max","step","onChange","handleLernrateChange","id","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da86fa73.chunk.js","sourcesContent":["/*\r\nThis File handles the calculation for the Perecptron algorithm\r\ncalculate new Weights, Label and the Sign\r\n*/\r\n\r\n//Value of the Bias\r\nconst BIAS_VALUE=1;\r\n\r\n//Calculate the new Weights accoring to the Perecptron Algorithm\r\nexport function adjustWeights(weights,point, error, lr){\r\n    weights.weight_1+=error*point.posX*lr;\r\n    weights.weight_2+=error*point.posY*lr;\r\n    weights.bias_weight+=error*BIAS_VALUE*lr;\r\n}\r\n\r\n//Calculates the dot product of the weights and the point (x,y,1)\r\nexport function guess(weights, x, y){\r\n    let label=x*weights.weight_1+y*weights.weight_2+weights.bias_weight*BIAS_VALUE;\r\n    return sign(label);\r\n}\r\n\r\n//Return the sign of a number\r\nfunction sign(number){\r\n    if(number > 0) return 1;\r\n    if(number < 0) return -1;\r\n    return 0;\r\n}","/*\r\nThis File handles the Drawing for the Canvas id=\"visual_perceptron\" (the right one)\r\n*/\r\n\r\n//Redraws the Figure (Canvas \"visual_perecptron\")\r\nexport function drawPerceptronFigure(weights){\r\n    var canvas = document.getElementById(\"visual_perceptron\");\r\n    var context = canvas.getContext(\"2d\");\r\n    //Displays the Biasneuron\r\n    context.fillStyle=\"#ADD8E6\";\r\n    context.beginPath();\r\n    context.arc(20, 30, 20, 0, 2*Math.PI);\r\n    context.fill();\r\n    context.fillStyle=\"black\";\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"1\", 20-6, 30+6); \r\n    //Displays the X Neuron (X Value)\r\n    context.fillStyle=\"#ADD8E6\";\r\n    context.beginPath();\r\n    context.arc(20, 90, 20, 0, 2*Math.PI);\r\n    context.fill();\r\n    context.fillStyle=\"black\";\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"X\", 20-7, 90+7); \r\n    //Displays the Y Neuron (Y Value)\r\n    context.fillStyle=\"#ADD8E6\";\r\n    context.beginPath();\r\n    context.arc(20, 150, 20, 0, 2*Math.PI);\r\n    context.fill();\r\n    context.fillStyle=\"black\";\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"Y\", 20-7, 150+7);\r\n    ////Displays the + Symbol\r\n    context.fillStyle=\"#ADD8E6\";\r\n    context.beginPath();\r\n    context.arc(330, 90, 20, 0, 2*Math.PI);\r\n    context.fill();\r\n    context.fillStyle=\"black\";\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"∑\", 330-7, 90+5);\r\n    //Display line from Bias to the right\r\n    context.beginPath();\r\n    context.lineWidth = 2;\r\n    context.moveTo(40, 30);\r\n    context.lineTo(285,30);\r\n    context.stroke();\r\n    ////Display line from X to + \r\n    context.beginPath();\r\n    context.lineWidth = 2;\r\n    context.moveTo(40, 90);\r\n    context.lineTo(310,90);\r\n    context.stroke();\r\n    //Display line from Y to the right\r\n    context.beginPath();\r\n    context.lineWidth = 2;\r\n    context.moveTo(40, 150);\r\n    context.lineTo(285,150);\r\n    context.stroke();\r\n\r\n    //Weights Display\r\n    context.fillStyle=\"black\";\r\n    //bias\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"w0: \"+(Math.round(weights.bias_weight * 100) / 100).toFixed(2), 50, 25);\r\n    //w1\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"w1: \"+(Math.round(weights.weight_1 * 100) / 100).toFixed(2), 50, 85);\r\n    //w3\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"w2: \"+(Math.round(weights.weight_2 * 100) / 100).toFixed(2), 50, 145);\r\n            \r\n    //Line from Y(Right) to up\r\n    context.beginPath();\r\n    context.lineWidth = 2;\r\n    context.moveTo(285,150);\r\n    context.lineTo(285,90);\r\n    context.stroke();\r\n    //Line from Y(Right) to Down\r\n    context.beginPath();\r\n    context.lineWidth = 2;\r\n    context.moveTo(285,30);\r\n    context.lineTo(285,90);\r\n    context.stroke();\r\n    //Path from + to Out\r\n    context.beginPath();\r\n    context.lineWidth = 2;\r\n    context.moveTo(350, 90);\r\n    context.lineTo(370, 90);\r\n    context.stroke();\r\n    //out\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"out\", 372, 95);\r\n}\r\n\r\n//Updates the weight display\r\nexport function updateWeightDisplay(weights){\r\n    var canvas = document.getElementById(\"visual_perceptron\");\r\n    var context = canvas.getContext(\"2d\");\r\n    //Clears the old display (over-milled)\r\n    context.clearRect(50,10,233,17);\r\n    context.clearRect(50,70,233,17);\r\n    context.clearRect(50,130,233,17);\r\n    context.fillStyle=\"black\";\r\n    //bias\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"w0: \"+(Math.round(weights.bias_weight * 100) / 100).toFixed(2), 50, 25);\r\n    //w1\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"w1: \"+(Math.round(weights.weight_1 * 100) / 100).toFixed(2), 50, 85);\r\n    //w3\r\n    context.font = \"20px Arial\";\r\n    context.fillText(\"w2: \"+(Math.round(weights.weight_2 * 100) / 100).toFixed(2), 50, 145);\r\n}","/*\r\nThis File handles the Drawing for the Canvas id=\"2d-plane\" (the left one one)\r\n*/\r\n\r\nimport {guess} from \"../help-methods/help-methods-perceptron\";\r\nimport {updateWeightDisplay} from \"./drawmethodsperceptronfigure\";\r\n\r\n//Consts for the Crosses Display if a Points is Missclassified\r\nconst CROSS_SIZE=5;\r\nconst CROSS_WIDTH=3;\r\n//Const Class Colors\r\nconst COLOR_CLASS_0=\"red\";\r\nconst COLOR_CLASS_1=\"blue\";\r\n//Const Canvas Width and Heights\r\nconst CANVAS_WIDTH=400;\r\nconst CANVAS_HEIGHT=350;\r\n\r\n//Resets the Canvas to the initial state\r\nexport function resetCanvas(){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    context.clearRect(0,0,canvas.width,canvas.height);\r\n    context.beginPath();\r\n    context.fillStyle = \"lightgray\";\r\n    context.fillRect(0,0,CANVAS_WIDTH,CANVAS_HEIGHT);\r\n    context.stroke(); \r\n}\r\n\r\n//Draws a Point to the Canvas where it was clicked and adds it to the points array\r\nexport function drawPointOnClick(e, points, classMode){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    var pos = getMousePos(canvas, e);\r\n    let posX = Math.floor(pos.x);\r\n    let posY = Math.floor(pos.y);\r\n    context.fillStyle =classMode ? COLOR_CLASS_0 : COLOR_CLASS_1;\r\n    context.beginPath();\r\n    context.arc(posX, posY, 5, 0, 2*Math.PI);\r\n    context.fill();\r\n    var newPoint=createPoint(posX,posY,classMode ? -1:1);\r\n    points.push(newPoint);\r\n    return points;\r\n}\r\n\r\n//Updates the Canvas for the Training Iterations or after it is Finished in 3 Steps\r\n//1.Classifie every Pixel in the Canvas and color it (Background)\r\n//2.Redraw all the Points in points\r\n//3.Draw the seperation Line\r\n//4.Update/Redraw the weight display in canvas \"visual_perceptron\"\r\nexport function reDrawCanvas(weights,points){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    const imgData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n    const data = imgData.data;\r\n\r\n    //Iterats throw the Canvas Pixel by Pixel\r\n    for(let i = 0; i < data.length; i += 4) {\r\n        var x = (i / 4) % imgData.width;//x-Koordinate in the Canvas\r\n        var y = Math.floor((i / 4) / imgData.height);//x-Koordinate in the Canvas\r\n        var label=guess(weights, x,y)//Classifie the pixel x,y\r\n        if(label===1){\r\n            drawPixels(x,y,context,\"#87CEFA\");//Class Blue\r\n        } else if(label===-1) {\r\n            drawPixels(x,y,context,\"#FA8072\");//Class Red\r\n        } else {\r\n            drawPixels(x,y,context,\"black\"); // guess=0 => could be Class Red or Blue\r\n        }\r\n    }\r\n    reDrawPoints(points); // ReDraw All the Points in Points\r\n    drawSeperationLine(weights); // Draws the seperation Line\r\n    drawMarkerRightOrWrong(points,weights); // Draws little Crosses over the points who are misclassified\r\n    updateWeightDisplay(weights); // update the Weight display in Canvas \"visual_perceptron\"\r\n}\r\n\r\n//Draw the seperation line\r\nfunction drawSeperationLine(weights){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    context.strokeStyle = '#ADFF2F';\r\n    context.beginPath();\r\n    context.lineWidth = 4;\r\n    context.moveTo(0, -(weights.bias_weight/weights.weight_2));\r\n    context.lineTo(400, -(weights.bias_weight/weights.weight_2)-(weights.weight_1/weights.weight_2)*400);\r\n    context.stroke(); \r\n}\r\n\r\n//Draws crosses over the Points who are misclassified\r\nfunction drawMarkerRightOrWrong(points,weights){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    for(let i=0;i<points.length;i++){\r\n        var p = points[i];\r\n        if(p.label!==guess(weights,p.posX,p.posY)){\r\n            context.beginPath();\r\n            context.lineWidth = CROSS_WIDTH;\r\n            context.moveTo(p.posX - CROSS_SIZE, p.posY - CROSS_SIZE);\r\n            context.lineTo(p.posX + CROSS_SIZE, p.posY + CROSS_SIZE);\r\n        \r\n            context.moveTo(p.posX + CROSS_SIZE, p.posY - CROSS_SIZE);\r\n            context.lineTo(p.posX - CROSS_SIZE, p.posY + CROSS_SIZE);\r\n            context.stroke();\r\n            context.lineWidth = 1;\r\n        }\r\n    }\r\n}\r\n\r\n//Draw a Rectangle of size 2x2 for every pixel\r\nfunction drawPixels(x,y,context,color){\r\n    context.fillStyle = color;\r\n    context.fillRect(x,y,2,2);\r\n}\r\n\r\n//Draws the point from points\r\nexport function reDrawPoints(points){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    for(let i=0;i<points.length;i++){\r\n        var p = points[i];\r\n        context.fillStyle = p.label===-1 ? COLOR_CLASS_0:COLOR_CLASS_1;\r\n        context.beginPath();\r\n        context.arc(p.posX, p.posY, 5, 0, 2*Math.PI);\r\n        context.fill();\r\n    }\r\n}\r\n\r\n//Gets the Mouse position on the Canvas\r\nfunction getMousePos(canvas, evt) {\r\n    var rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top\r\n    };\r\n}\r\n\r\n//Creates a new Point with x,y,label for the array points\r\nconst createPoint=(x,y,classLabel)=>{\r\n    return {\r\n        posX:x,\r\n        posY:y,\r\n        label: classLabel,\r\n    };\r\n}\r\n","import React from 'react';\r\nimport \"./Perceptron.css\";\r\nimport {adjustWeights, guess} from \"./methods/help-methods/help-methods-perceptron\";\r\nimport {reDrawCanvas, drawPointOnClick, resetCanvas, reDrawPoints} from \"./methods/canvas/drawmethods2dplane\";\r\nimport {drawPerceptronFigure,updateWeightDisplay} from \"./methods/canvas/drawmethodsperceptronfigure\";\r\nimport { Button, Slider } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n /**\r\n  Code for the custom slider look\r\n  * */ \r\n function ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n  \r\n    return (\r\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n        {children}\r\n      </Tooltip>\r\n    );\r\n  }\r\n  ValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color: 'red',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n/**End Slide Code */\r\n\r\n//Constants Canvas \"2dplane\"\r\nconst CANVAS_WIDTH=400;\r\nconst CANVAS_HEIGHT=350;\r\n//Constants Canvas \"visual_perceptron\"\r\nconst CANVAS_P_WIDTH=400;\r\nconst CANVAS_P_HEIGHT=180;\r\n//Constant number of Max Iteration  for the Perceptron Algorithm\r\nconst MAX_ITERATION=500000;\r\n\r\nexport default class Perceptron extends React.Component{\r\n    intervalID = 0;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            points: [],\r\n            classMode: true,//true=class:Red, false=class:Blue,\r\n            weights: createInitialWeights(),\r\n            isLearning: false,\r\n            error:0,\r\n            lernrate:0.9,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){ \r\n        resetCanvas();\r\n        drawPerceptronFigure(this.state.weights);    \r\n    }\r\n\r\n    //Draws a point on Canvas \"2dplane\" and save it in the array points\r\n    drawPointOnClick(e){\r\n        if(this.state.isRunning) return;\r\n        let newPoints = drawPointOnClick(e,this.state.points, this.state.classMode);\r\n        this.setState({points: newPoints});\r\n    }\r\n\r\n    //Switches the Classes (Red <-> Blue)\r\n    changeClass(){\r\n        this.setState({classMode: !this.state.classMode});\r\n    }\r\n\r\n    //Executes the Perceptron Algorithm \r\n    train(){\r\n        if(this.state.points.length===0) return null;\r\n        const points = this.state.points;\r\n        let weights = this.state.weights;\r\n        let allRight=false;\r\n        let lr = this.state.lernrate;//Lernrate\r\n        let counter=0;\r\n        while(!allRight && counter<MAX_ITERATION){\r\n            allRight=true;\r\n            for(let i=0;i<points.length;i++){\r\n                    const guess_Label=guess(weights, points[i].posX, points[i].posY);//Calculate the IS-Value\r\n                    const error = points[i].label-guess_Label;//Calculate Error (IS-Target)\r\n                    if(error!==0){\r\n                        adjustWeights(weights, points[i], error, lr);// Changes the Weights according to the Perceptron Algorithm\r\n                        allRight=false;\r\n                        counter++;\r\n                    }\r\n            }\r\n        }\r\n        reDrawCanvas(weights,points);\r\n        this.setState({weights: weights, error: this.countMisclassified(weights,points)});\r\n    }\r\n\r\n    //Executes the Perceptron Algorithm (One Iteration) every 50 ms and displays\r\n    //it every 1000 Iteration or if a a Hyerplane is foubd\r\n    trainVisual(){\r\n        this.setState({isLearning:true})\r\n        let allRight;\r\n        const points = this.state.points;\r\n        let weights = this.state.weights;\r\n        let counter=0;\r\n        let lr = this.state.lernrate; //Lernrate\r\n        this.intervalID = setInterval(() => {\r\n            allRight=true;\r\n            for(let i=0;i<points.length;i++){\r\n                 const guess_Label=guess(weights, points[i].posX, points[i].posY);//Calculate the IS-Value\r\n                 const error = points[i].label-guess_Label;//Calculate Error (IS-Target)\r\n                 if(error!==0){\r\n                     allRight=false;\r\n                     counter++;\r\n                     adjustWeights(weights, points[i], error, lr); // Changes the Weights according to the Perceptron Algorithm\r\n                     if(counter%1000===0)\r\n                        reDrawCanvas(weights,points);\r\n                 }\r\n                 reDrawCanvas(weights,points);\r\n            }\r\n\r\n            //Check if Algrithm should stops\r\n            if(allRight || counter>MAX_ITERATION){\r\n                this.setState({error: this.countMisclassified(weights, points)});\r\n                this.stopTraining();\r\n                this.setState({weights:weights});\r\n            } \r\n        }, 50);\r\n    }\r\n\r\n    //Counts the Misclassified Points and Displays it\r\n    countMisclassified(weights, points){\r\n        let counter=0;\r\n        for(let i=0;i<points.length;i++){\r\n            var p = points[i];\r\n            if(p.label!==guess(weights,p.posX,p.posY)){\r\n            counter ++;\r\n            }\r\n        }\r\n        return counter;\r\n    }\r\n\r\n    //Stops the \"Visual\" Training\r\n    stopTraining(){\r\n        clearInterval(this.intervalID);\r\n        this.setState({isLearning:false});\r\n    }\r\n\r\n    //Resets the Weights and the display in Canvas \"visual_perceptron\"\r\n    resetWeights(){\r\n        this.setState({weights: createInitialWeights()});\r\n        setTimeout(() => {\r\n            resetCanvas();\r\n            reDrawPoints(this.state.points);\r\n            updateWeightDisplay(this.state.weights);\r\n        }, 20);\r\n    }\r\n\r\n    //Clears Canvas \"2dplane\" and all the points\r\n    clear(){\r\n        this.setState({points:[]});\r\n        resetCanvas();\r\n    }\r\n\r\n    //event Handler for Lernrate Change\r\n    handleLernrateChange(e, val){ \r\n        this.setState({lernrate : val})\r\n    }\r\n\r\n    render(){\r\n        const {isLearning, classMode, error, lernrate} = this.state;\r\n        return(\r\n            <div className=\"perceptron\">\r\n                <Button variant=\"contained\" color={classMode?\"secondary\": \"primary\"} onClick={() => this.changeClass()}>{classMode?\"Red\":\"Blue\"}</Button>\r\n                <Button disabled={isLearning} variant=\"contained\" onClick={() => this.train()}>Train</Button>\r\n                <Button disabled={isLearning} variant=\"contained\" onClick={() => this.trainVisual()}>Train Visual</Button>\r\n                <Button variant=\"contained\" onClick={(e) => this.stopTraining()}>Stop Training</Button>\r\n                <Button disabled={isLearning} variant=\"contained\" onClick={() => this.resetWeights()}>Reset Weights</Button>\r\n                <Button disabled={isLearning} variant=\"contained\" onClick={(e) => this.clear(e)}>Clear</Button>\r\n                <div className=\"perceptron__slider\">\r\n                    <PrettoSlider disabled={isLearning} valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={0.9} min={0} max={1.5} step={0.1}\r\n                    onChange={(e, val) => this.handleLernrateChange(e, val)}  \r\n                    />\r\n                    <h4>Lernrate: {lernrate}</h4>\r\n                </div>\r\n                <div className=\"perceptron__canvas\">\r\n                    <canvas className=\"perceptron__canvas__2dplane\" id=\"2d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                        onClick={(e) => this.drawPointOnClick(e)}\r\n                    ></canvas>\r\n                    <div className=\"perceptron__canvas__right\">\r\n                        <div className=\"perceptron__canvas__right__labels\">\r\n                            <h4>Missclassifed: {error}</h4>\r\n                        </div>\r\n                        <canvas className=\"perceptron__canvas__right__info\" id=\"visual_perceptron\" width={CANVAS_P_WIDTH} height={CANVAS_P_HEIGHT}\r\n                        ></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst createInitialWeights=() =>{\r\n    return {\r\n        weight_1:0,\r\n        weight_2:0,\r\n        bias_weight:0\r\n    } \r\n};\r\n","import './App.css';\nimport Perceptron from \"./Perceptron/Perceptron\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Perceptron</h1>\n      <Perceptron/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}